buildscript {
	ext.project_owner_name = 'Thomas Nappo'
	ext.project_owner_email = 'thomasgnappo@gmail.com'
	ext.project_owner_github = 'jire'
	
	ext.project_name = 'RegEdit'
	ext.project_description = 'Windows Registry editing on the JVM'
	ext.project_group = 'org.jire.regedit'
	ext.project_artifact = 'regedit'
	ext.project_version = '1.0.0'
	ext.project_license = 'The Apache Software License, Version 2.0'
	ext.project_license_tag = 'Apache-2.0'
	ext.project_license_url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
	
	ext.kotlin_version = '1.0.6'
	
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

plugins {
	id "com.jfrog.bintray" version "1.7.1"
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'kotlin'

group project_group
version project_version

repositories {
	mavenCentral()
}

dependencies {
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

publishing {
	publications {
		maven(MavenPublication) {
			from components.java
			groupId project_group
			artifactId project_artifact
			version project_version
			artifact sourcesJar
			artifact javadocJar
			pom.withXml {
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name project_name
					description project_description
					url "https://github.com/$project_owner_github/$project_name"
					scm {
						url "https://github.com/$project_owner_github/$project_name"
						connection "scm:git:git://github.com/$project_owner_github/${project_name}.git"
						developerConnection "scm:git:ssh:git@github.com:$project_owner_github/${project_name}.git"
					}
					licenses {
						license {
							name project_license
							url project_license_url
							distribution 'repo'
						}
					}
					developers {
						developer {
							id project_owner_github
							name project_owner_name
							email project_owner_email
						}
					}
				}
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_API_KEY')
	publications = ['maven']
	pkg {
		repo = 'maven'
		name = project_name
		licenses = [project_license_tag]
		publicDownloadNumbers = true
		websiteUrl = "https://github.com/$project_owner_github/$project_name"
		issueTrackerUrl = "https://github.com/$project_owner_github/$project_name/issues"
		vcsUrl = "https://github.com/$project_owner_github/${project_name}.git"
		githubRepo = "$project_owner_github/$project_name"
		version {
			name = project_version
			vcsTag = project_version
			gpg {
				sign = true
			}
		}
	}
}